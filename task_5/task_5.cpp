/*
	5. Написать программу, выполняющую шифрование и
дешифрование текстового файла с заданным ключом,
используя оператор ^ (поразрядное исключающее или).

Путь к входному/выходному файлу задает пользователь !
*/

// ГОТОВО.

#include <iostream>
#include <fstream>
#include <Windows.h>

using namespace std;

int main()
{
	SetConsoleCP(1251);
	/*
	Задает кодовую страницу ввода, используемую консолью, связанной с вызывающим процессом.
	Консоль использует страницу входного кода для преобразования ввода с клавиатуры
	в соответствующее символьное значение.
	*/
	SetConsoleOutputCP(1251);
	/*
	Задает выходную кодовую страницу, используемую консолью, связанной с вызывающим процессом.
	Консоль использует свою кодовую страницу вывода для преобразования символьных значений,
	записанных различными функциями вывода, в изображения, отображаемые в окне консоли.
	*/

	cout << "Введите путь к исходному файлу: "; // 1.txt
	string fileName{};
	cin >> fileName;

	cout << "Введите шифр: "; // 111
	int code{};
	cin >> code;

	// Открывается  файл на чтение в бинарном режиме: при этом файл должен существовать.
	ifstream in(fileName, ios::binary | ios::in);

	in.seekg(0, ios::end); // Смещение указателя на 0 от конца файла.
	int length = in.tellg(); // Размер файла.
	in.seekg(0, ios::beg); // Смещение указателя на на 0 от начала файла.

	char* dataForProcessing = new char[length] {};

	in.read(dataForProcessing, length);

	for (int i = 0; i < length; i++) // Шифруем/дешифруем каждый байт.
		dataForProcessing[i] ^= code;
	in.close();

	// Открывается  файл на запись в бинарном режиме : если файл не существует - он будет создан, если файл существует - он будет усечён до нулевой длины
	ofstream out(fileName, ios::binary | ios::out);
	out.write(dataForProcessing, length);
	out.close();

	cout << endl << "Файл успешно зашифрован/расшифрован !" << endl;

	delete[]dataForProcessing;

	return 0;
}